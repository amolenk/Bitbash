@page "/agenda"
@inject EventDetailsProvider EventDetailsProvider
@inject WebsiteSettings Settings

<PageTitle>Agenda | Bitbash</PageTitle>

<HeaderSpacer />

<Section HeaderText="Agenda" ExtraClass="rocket-2" FadeUp="true">

    @if (Settings.AgendaAnnounced)
    {
        <DateSelector OnSelectedDateChanged="OnSelectedDateChanged"/>

        <div class="container">

            @if (schedule is not null)
            {
                foreach (var slot in schedule)
                {
                    <div class="row text-center">
                        <h2>@slot.Key.ToString("HH:mm") - @slot.First().EndsAt!.Value.ToString("HH:mm")</h2>
                    </div>

                    <div class="row justify-content-center p-2">

                        @if (slot.Any())
                        {
                            foreach (var session in slot)
                            {
                                <SessionCard Session="@session"/>
                            }
                        }

                    </div>
                }
            }

        </div>
    }
    else
    {
        <div class="text-center">
            <p>We are currently working diligently to finalize the agenda for the event.</p>
            <p>Please check back soon for the full agenda, which will be published as soon as it is confirmed.</p>
        </div>
    }

</Section>

@code
{
    private IEnumerable<IGrouping<DateTime, Session>>? schedule;

    private async Task OnSelectedDateChanged(DateOnly date)
    {
        if (Settings.AgendaAnnounced)
        {
            schedule = await EventDetailsProvider.GetScheduleAsync(Settings.CurrentEdition, date);
        }
    }
}
