@page "/{Edition}/speaker/{SpeakerId}"
@inject EventDetailsProvider EventDetailsProvider

@if (speaker is not null)
{
    <PageTitle>@speaker.FullName | Bitbash</PageTitle>

    <HeaderSpacer />

    <Section HeaderText="@speaker.FullName" SubText="@speaker.TagLine" ExtraClass="rocket-4" FadeUp="true">

        <div class="container">
            <div class="row">

                <div class="col-md-6 g-0 speaker-photo">
                    <img src="@speaker.ProfilePictureUrl" alt="Photo of speaker @speaker.FullName">
                </div>

                <div class="col-md-6">

                    <p>@((MarkupString)((speaker.Bio ?? string.Empty).Replace("\r\n", "<br/>")))</p>
                </div>
            </div>
        </div>

    </Section>

    <Section HeaderText="Sessions" ExtraClass="rocket-5" FadeUp="true">

        <div class="row d-flex justify-content-center">
        @foreach (var session in speaker.Sessions)
        {
            <SessionCard Session="session" />
        }
        </div>

    </Section>
}

@code
{
    [Parameter]
    public string Edition { get; set; } = string.Empty;

    [Parameter]
    public string SpeakerId { get; set; } = string.Empty;

    private Speaker? speaker;

    protected override async Task OnInitializedAsync()
    {
        speaker = await EventDetailsProvider.GetSpeakerAsync(Edition, SpeakerId);
    }
}