@inject IJSRuntime JS
@inject NavigationManager NavigationManager

<header id="header" class="header d-flex align-items-center">
    <div class="container-fluid container-xxl align-items-center">

        <div class="logo-mobile">
            <a href="#hero" alt="Home"><img src="img/logo.png" alt="" title=""></a>
        </div>

        <nav id="navbar" class="navbar order-last order-lg-0 @(useMobileNav ? "navbar-mobile" : string.Empty)">
            <ul>
                <li><a class="nav-link @(activePage == string.Empty ? "active" : string.Empty)" href="" @onclick="@(() => Navigate("/"))" @onclick:preventDefault>Home</a></li>
                <li><a class="nav-link @(activePage == "agenda" ? "active" : string.Empty)" href="" @onclick="@(() => Navigate("/agenda"))" @onclick:preventDefault>Agenda</a></li>
                <li class="logo"><div id="logo" class="me-auto">
                    <a href="/"><img src="img/logo.png" alt="Logo" title=""></a>
                </div></li>
                <li><a class="nav-link @(activePage == "speakers" ? "active" : string.Empty)" href="" @onclick="@(() => Navigate("/speakers"))" @onclick:preventDefault>Speakers</a></li>
                <li><a class="nav-link @(activePage == "tickets" ? "active" : string.Empty)" href="" @onclick="@(() => Navigate("/tickets"))" @onclick:preventDefault>Tickets</a></li>
            </ul>
            <i class="bi mobile-nav-toggle @(useMobileNav ? "bi-x" : "bi-list")" @onclick="ToggleMobileNavigation"></i>
        </nav>

    </div>
</header>

@code
{
    private bool useMobileNav { get; set; }

    private string activePage { get; set; } = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var newActivePage = Path.GetFileName(NavigationManager.Uri);
            if (newActivePage != activePage)
            {
                activePage = newActivePage;
                StateHasChanged();
            }

            await JS.InvokeVoidAsync("InitializeHeaderScrollEffect");
        }
    }

    private void ToggleMobileNavigation()
    {
        useMobileNav = !useMobileNav;
    }

    private void Navigate(string uri)
    {
        if (useMobileNav)
        {
            useMobileNav = false;
        }

        activePage = Path.GetFileName(uri);

        NavigationManager.NavigateTo(uri);
    }
}
