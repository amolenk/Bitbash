@inject EventDetailsProvider EventDetailsProvider
@inject WebsiteSettings Settings

<Section Id="speakers" HeaderText="Speakers" ExtraClass="rocket-3" FadeUp="true">

    @if (speakers is {})
    {
        <div class="row">
            @foreach (var speaker in speakers.Take(3))
            {
                <div class="col-md-4 d-flex justify-content-center">
                    <SpeakerCard Speaker="@speaker" />
                </div>
            }
        </div>

        <div class="row">
            @foreach (var speaker in speakers.Skip(3).Take(3))
            {
                <div class="col-md-4 d-flex justify-content-center">
                    <SpeakerCard Speaker="@speaker" />
                </div>
            }
        </div>

        <div class="row">
            <div class="col d-flex justify-content-center">
                <a href="/speakers" class="btn btn-primary">See all @speakers.Count speakers</a>
            </div>
        </div>
    }

</Section>

@code
{
    private List<Speaker>? speakers;

    protected override async Task OnInitializedAsync()
    {
        var allSpeakers = (await EventDetailsProvider.GetSpeakersAsync(Settings.CurrentEdition))
            .ToList();

        Shuffle(allSpeakers);

        speakers = allSpeakers;
    }

    private static void Shuffle<T>(IList<T> list)  
    {  
        var random = new Random();  

        int n = list.Count;  
        while (n > 1)
        {  
            n--;  
            int k = random.Next(n + 1);  
            T value = list[k];  
            list[k] = list[n];  
            list[n] = value;  
        }  
    }
}
