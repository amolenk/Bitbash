@page "/{Edition}/session/{SessionId}"
@inject EventDetailsProvider EventDetailsProvider

@if (_session is not null)
{
    <PageTitle>@_session.Title | Bitbash</PageTitle>

    <HeaderSpacer />

    <Section HeaderText="@_session.Title">

        <div class="row">
            <div class="card p-0">
                @if (_session.StartsAt.HasValue)
                {
                    <div class="card-header">
                        <h2>@FormatTimeLocation(_session)</h2>
                    </div>
                }
                <div class="card-body">
                    <p>@((MarkupString)(_session.Description ?? string.Empty).Replace("\r\n", "<br/>"))</p>
                    <h6>
                        <span class="badge rounded-pill session-format">@_session.SessionFormat</span>
                        <span class="badge rounded-pill session-level">@_session.Level</span>
                    </h6>
                </div>
                <div class="card-footer d-flex justify-content-center">
                    @foreach (var speaker in _session.Speakers)
                    {
                        <SpeakerCard Edition="@Edition" Speaker="speaker" />
                    }
                </div>
            </div>
        </div>

    </Section>
}

@code
{
    [Parameter]
    public string Edition { get; set; } = string.Empty;

    [Parameter]
    public string SessionId { get; set; } = string.Empty;

    private Session? _session;

    protected override async Task OnInitializedAsync()
    {
        _session = await EventDetailsProvider.GetSessionAsync(Edition, SessionId);
    }

    private string FormatTimeLocation(Session session)
    {
        if (session.StartsAt is not null && session.EndsAt is not null)
        {
            var result = $"{session.StartsAt.Value:dddd dd MMM HH:mm} - {session.EndsAt.Value:HH:mm}";

            if (session.Room is not null)
            {
                result += $" - {session.Room}";
            }

            return result;
        }

        return string.Empty;
    }
}